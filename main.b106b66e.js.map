{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","employees","querySelectorAll","sortList","someEmployees","sortedEmployees","sort","item1","item2","salary1","dataset","salary","split","join","salary2","append","getEmployees","someList","map","item","name","innerText","position","age"],"mappings":";AAAA,aAiCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/BA,IAAMA,EAAOC,SAASC,cAAc,MAC9BC,EAAYF,SAASG,iBAAiB,MAE5C,SAASC,EAASC,GACVC,IAAAA,EAAkB,EAAID,GAAeE,KAAK,SAACC,EAAOC,GAChDC,IAAAA,GAAWF,EAAMG,QAAQC,OAC5BC,MAAM,KAAKC,KAAK,IAChBD,MAAM,KAAKC,KAAK,IAMZC,OAJUN,EAAME,QAAQC,OAC5BC,MAAM,KAAKC,KAAK,IAChBD,MAAM,KAAKC,KAAK,IAEFJ,IAGnBX,EAAKiB,OAALjB,MAAAA,EAAeO,EAAAA,IAGjB,SAASW,EAAaC,GACb,OAAA,EAAIA,GAAUC,IAAI,SAAAC,GAChB,MAAA,CACLC,KAAMD,EAAKE,UACXC,SAAUH,EAAKT,QAAQY,SACvBX,OAAQQ,EAAKT,QAAQC,OACrBY,IAAKJ,EAAKT,QAAQa,OAKxBpB,EAASF,GACTe,EAAaf","file":"main.b106b66e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\nconst employees = document.querySelectorAll('li');\n\nfunction sortList(someEmployees) {\n  const sortedEmployees = [...someEmployees].sort((item1, item2) => {\n    const salary1 = +item1.dataset.salary\n      .split(',').join('')\n      .split('$').join('');\n\n    const salary2 = +item2.dataset.salary\n      .split(',').join('')\n      .split('$').join('');\n\n    return salary2 - salary1;\n  });\n\n  list.append(...sortedEmployees);\n}\n\nfunction getEmployees(someList) {\n  return [...someList].map(item => {\n    return {\n      name: item.innerText,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    };\n  });\n}\n\nsortList(employees);\ngetEmployees(employees);\n"]}